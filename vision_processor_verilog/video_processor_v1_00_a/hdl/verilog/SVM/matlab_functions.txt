	%Demo: lbp [8 4 32]
	%HWsvm = hardSVM(Rsingle_svmPoly10,[0 7],[2 5],[1 7],testA,testB); HWsvm.Bias = 0.75;
	%createAlphaMemory(HWsvm,'alpha',[3 5],'r')
	%exportSupportVectors(svm,numberOfMems,name)
	%createSupportVectorMemories(HWsvm,1,'sv',[1 7])
	
	
	%%%% Code to test SVM HW
	
	
 %{
 sum=0;
 
  for i=10:-1:1
	fprintf('index:%d\n',i);
	temp = dec2Bin2s(27-14,14,HWsvm.SupportVectors(i,:)*h','n');
	temp = bin2dec(temp);
	fprintf('\tdot:%d\n',temp);
	
	temp=dec2Bin2s(47-28,28,(HWsvm.SupportVectors(i,:)*h')^2,'n');
	temp = bin2dec(temp);
	fprintf('\tdotSquare:%d\n',temp);

	temp=dec2Bin2s(8-5,5,HWsvm.Alpha(i),'n');
	temp = bin2dec(temp);
	fprintf('\tAlpha:%d\n',temp);
	
	temp=dec2Bin2s(47-33,33,(((HWsvm.SupportVectors(i,:)*h')^2)*HWsvm.Alpha(i)),'n');
	temp = bin2dec(temp);
	fprintf('\tRes:%d\n',temp);
	
	sum = sum + (((HWsvm.SupportVectors(i,:)*h')^2)*HWsvm.Alpha(i));
	
	temp=dec2Bin2s(47-33,33,sum,'s');
	temp = bin2dec(temp);
	fprintf('\tSum:%d\n',temp);
	
	disp('-----')
	
	pause
	
  end
 %}
 %{
 sum=0;
 id=1;
 HWsvm.Alpha(id)
 for i=1:1024
 
	fprintf('index:%d\n',i);

	temp = dec2Bin2s(0,7,HWsvm.SupportVectors(id,i),'n');
	temp1=fi(HWsvm.SupportVectors(id,i),1,8,7);
	temp = bin2dec(temp);
	fprintf('\tSV:%d\n',temp);

	temp=dec2Bin2s(1,7,h(i),'n');
	temp2=fi(h(i),1,8,6);
	temp = bin2dec(temp);
	fprintf('\tInputData:%d\n',temp);
	
	res=double(temp1)*double(temp2);
	temp=dec2Bin2s(1,14,res,'n');
	temp = bin2dec(temp);
	fprintf('\tDot:%d\n',temp);
	
	sum = sum + res;
	temp=dec2Bin2s(13,14,sum,'n');
	temp = bin2dec(temp);
	fprintf('\tSum:%d\n',temp);
	disp('-----')
	%pause
	
 end
 
 
 %}
